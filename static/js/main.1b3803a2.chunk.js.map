{"version":3,"sources":["component/signupForm.js","App.js","reportWebVitals.js","index.js"],"names":["RegistrationForm","useState","username","email","phone","skills","userRegistration","setUserRegistration","records","setRecords","handleInput","e","name","target","value","console","log","action","onSubmit","preventDefault","newRecord","id","Date","getTime","toString","htmlFor","type","autoComplete","onChange","map","curElem","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAyGeA,EAvGU,WACvB,MAAgDC,mBAAS,CACvDC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,OAAQ,KAJV,mBAAOC,EAAP,KAAyBC,EAAzB,KAOA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBC,QAAQC,IAAIJ,EAAME,GAElBP,EAAoB,2BAAKD,GAAN,kBAAyBM,EAAOE,MAiBrD,OACE,qCACE,uBAAMG,OAAO,GAAGC,SAhBC,SAACP,GACpBA,EAAEQ,iBAEF,IAAMC,EAAS,2BACVd,GADU,IAEbe,IAAI,IAAIC,MAAOC,UAAUC,aAE3BT,QAAQC,IAAIR,GACZC,EAAW,GAAD,mBAAKD,GAAL,CAAcY,KACxBL,QAAQC,IAAIR,GAEZD,EAAoB,CAAEL,SAAU,GAAIC,MAAO,GAAIC,MAAO,GAAIC,OAAQ,MAKhE,UACE,gCACE,uBAAOoB,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLC,aAAa,MACbb,MAAOR,EAAiBJ,SACxB0B,SAAUlB,EACVE,KAAK,WACLS,GAAG,gBAIP,gCACE,uBAAOI,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLC,aAAa,MACbb,MAAOR,EAAiBH,MACxByB,SAAUlB,EACVE,KAAK,QACLS,GAAG,aAIP,gCACE,uBAAOI,QAAQ,QAAf,uBACA,uBACEC,KAAK,OACLC,aAAa,MACbb,MAAOR,EAAiBF,MACxBwB,SAAUlB,EACVE,KAAK,QACLS,GAAG,aAIP,gCACE,uBAAOI,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLC,aAAa,MACbb,MAAOR,EAAiBD,OACxBuB,SAAUlB,EACVE,KAAK,SACLS,GAAG,cAIP,wBAAQK,KAAK,SAAb,uBAGF,8BACGlB,EAAQqB,KAAI,SAACC,GACZ,IAAQT,EAAuCS,EAAvCT,GAAInB,EAAmC4B,EAAnC5B,SAAUC,EAAyB2B,EAAzB3B,MAAOC,EAAkB0B,EAAlB1B,MAAOC,EAAWyB,EAAXzB,OACpC,OACE,sBAAK0B,UAAU,gBAAf,UACE,4BAAI7B,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,4BAAIC,MAJ8BgB,YChFjCW,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b3803a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RegistrationForm = () => {\r\n  const [userRegistration, setUserRegistration] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    skills: \"\",\r\n  });\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    console.log(name, value);\r\n\r\n    setUserRegistration({ ...userRegistration, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newRecord = {\r\n      ...userRegistration,\r\n      id: new Date().getTime().toString(),\r\n    };\r\n    console.log(records);\r\n    setRecords([...records, newRecord]);\r\n    console.log(records);\r\n\r\n    setUserRegistration({ username: \"\", email: \"\", phone: \"\", skills: \"\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form action='' onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor='username'>Full Name</label>\r\n          <input\r\n            type='text'\r\n            autoComplete='off'\r\n            value={userRegistration.username}\r\n            onChange={handleInput}\r\n            name='username'\r\n            id='username'\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='email'>Email</label>\r\n          <input\r\n            type='text'\r\n            autoComplete='off'\r\n            value={userRegistration.email}\r\n            onChange={handleInput}\r\n            name='email'\r\n            id='email'\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='phone'>Telephone</label>\r\n          <input\r\n            type='text'\r\n            autoComplete='off'\r\n            value={userRegistration.phone}\r\n            onChange={handleInput}\r\n            name='phone'\r\n            id='phone'\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor='skills'>Skills</label>\r\n          <input\r\n            type='text'\r\n            autoComplete='off'\r\n            value={userRegistration.skills}\r\n            onChange={handleInput}\r\n            name='skills'\r\n            id='skills'\r\n          />\r\n        </div>\r\n\r\n        <button type='submit'>Signup</button>\r\n      </form>\r\n\r\n      <div>\r\n        {records.map((curElem) => {\r\n          const { id, username, email, phone, skills } = curElem;\r\n          return (\r\n            <div className='showDataStyle' key={id}>\r\n              <p>{username}</p>\r\n              <p>{email}</p>\r\n              <p>{phone}</p>\r\n              <p>{skills}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SignupForm from \"./component/signupForm\";\n\nconst App = () => {\n  return (\n    <div>\n      <SignupForm />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}